"use strict";(self.webpackChunk_kiebitz_apps_ffm=self.webpackChunk_kiebitz_apps_ffm||[]).push([[8300],{"./node_modules/vanellus/dist/actor.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Actor=void 0;const getKeys_1=__webpack_require__("./node_modules/vanellus/dist/anonymous/getKeys.js");exports.Actor=class Actor{constructor(actor,id,backend){this.getKeys=getKeys_1.getKeys,this.actor=actor,this.id=id,this.backend=backend}get(key){return this.backend.local.get(`${this.actor}::${this.id}::${key}`)}set(key,value){this.backend.local.set(`${this.actor}::${this.id}::${key}`,value)}unlock(key){}clearLocks(){}lock(key){}}},"./node_modules/vanellus/dist/anonymous/getKeys.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getKeys=void 0,exports.getKeys=async function getKeys(){const result=await this.backend.appointments.getKeys();if("rootKey"in result)return result;throw new Error("Fetching public keys failed")}},"./node_modules/vanellus/dist/backend/appointments.js":function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AppointmentsBackend=void 0;const jsonrpc_1=__importDefault(__webpack_require__("./node_modules/vanellus/dist/backend/jsonrpc.js"));class AppointmentsBackend extends jsonrpc_1.default{constructor(settings){super(settings,"appointments")}async confirmProvider({encryptedProviderData,publicProviderData,signedKeyData},keyPair){return await this.call("confirmProvider",{encryptedProviderData,publicProviderData,signedKeyData},keyPair)}async getAppointmentsByZipCode({zipCode,from,to}){return this.call("getAppointmentsByZipCode",{zipCode,from,to})}async getStats({id,metric,type,n,filter,from,to}){return await this.call("getStats",{id,metric,type,n,from,to,filter})}async getKeys(){return this.call("getKeys",{})}async resetDB({},keyPair){return await this.call("resetDB",{},keyPair)}async addMediatorPublicKeys({signedKeyData},keyPair){return this.call("addMediatorPublicKeys",{signedKeyData},keyPair)}async cancelAppointment({providerID,id,signedTokenData},keyPair){return this.call("cancelAppointment",{providerID,id,signedTokenData},keyPair)}async bookAppointment({providerID,id,encryptedData,signedTokenData},keyPair){return this.call("bookAppointment",{providerID,id,encryptedData,signedTokenData},keyPair)}async getToken({hash,publicKey,code}){return this.call("getToken",{hash,code,publicKey})}async getAppointments({from,to},keyPair){return this.call("getProviderAppointments",{from,to},keyPair)}async publishAppointments({offers},keyPair){return await this.call("publishAppointments",{offers},keyPair)}async getBookedAppointments({},keyPair){return await this.call("getBookedAppointments",{},keyPair)}async storeProviderData({encryptedData,code},keyPair){return this.call("storeProviderData",{encryptedData,code},keyPair)}async checkProviderData({},keyPair){return await this.call("checkProviderData",{},keyPair)}async getPendingProviderData({limit},keyPair){return this.call("getPendingProviderData",{limit},keyPair)}async getVerifiedProviderData({limit},keyPair){return this.call("getVerifiedProviderData",{limit},keyPair)}}exports.AppointmentsBackend=AppointmentsBackend},"./node_modules/vanellus/dist/backend/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Backend=void 0;const store_1=__webpack_require__("./node_modules/vanellus/dist/backend/store.js"),appointments_1=__webpack_require__("./node_modules/vanellus/dist/backend/appointments.js"),storage_1=__webpack_require__("./node_modules/vanellus/dist/backend/storage.js"),local_1=__webpack_require__("./node_modules/vanellus/dist/backend/local.js");__exportStar(__webpack_require__("./node_modules/vanellus/dist/backend/store.js"),exports);exports.Backend=class Backend{constructor(settings,store,temporaryStore){this.settings=settings,this.storage=new storage_1.StorageBackend(settings),this.appointments=new appointments_1.AppointmentsBackend(settings),this.local=new local_1.LocalBackend(settings,new store_1.PrefixStore(store,"local")),this.temporary=new local_1.LocalBackend(settings,new store_1.PrefixStore(temporaryStore,"temporary"))}}},"./node_modules/vanellus/dist/backend/jsonrpc.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0});const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.default=class JSONRPCBackend{constructor(settings,urlKey){this.settings=settings,this.urlKey=urlKey}get apiUrl(){return this.settings.apiUrls[this.urlKey]}async call(method,params,keyPair,id){let callParams;if("object"==typeof keyPair){const dataToSign={...params,timestamp:(new Date).toISOString()};callParams=await(0,crypto_1.sign)(keyPair.privateKey,JSON.stringify(dataToSign),keyPair.publicKey)}else callParams=params;try{const response=await fetch(this.apiUrl,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({jsonrpc:"2.0",method,params:callParams,id})});return response.ok?response.json().then((data=>data.result)):{code:-1,message:"request failed",data:{error:response.statusText}}}catch(e){return{code:-1,message:"request failed",data:{error:e.toString()}}}}}},"./node_modules/vanellus/dist/backend/local.js":(__unused_webpack_module,exports)=>{function timeout(ms){return new Promise((resolve=>setTimeout(resolve,ms)))}Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalBackend=void 0;exports.LocalBackend=class LocalBackend{constructor(settings,store){this.settings=settings,this.store=store,this._taskId=0,this._tasks=[],this._locked=!1}get(key,defaultValue){return this.store.get(key,defaultValue)}unlock(task){if(0===this._tasks.length)throw"should not happen";if(this._tasks[0][0]!==task)throw"wrong task";this._tasks=this._tasks.slice(1),console.log(`Finished task ${task}...`)}clearLocks(){this._tasks=[]}async lock(task){if(void 0!==this._tasks.find((t=>t[0]===task)))throw console.log(`task ${task} is already in queue, aborting...`),"already queued up";const taskId=this._taskId++;for(this._tasks.push([task,new Date,taskId]);;){if(0===this._tasks.length)throw"should not happen";const[t,dt,id]=this._tasks[0];if(id===taskId)break;(new Date).getTime()-dt.getTime()>3e5&&(this._tasks=this._tasks.slice(1)),await timeout(10)}console.log(`Executing task ${task}...`)}set(key,data){return this.store.set(key,data)}delete(key){return this.store.delete(key)}deleteAll(prefix){return this.store.deleteAll(prefix)}}},"./node_modules/vanellus/dist/backend/storage.js":function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StorageBackend=void 0;const jsonrpc_1=__importDefault(__webpack_require__("./node_modules/vanellus/dist/backend/jsonrpc.js"));class StorageBackend extends jsonrpc_1.default{constructor(settings){super(settings,"storage")}async storeSettings({id,data}){return await this.call("storeSettings",{id,data})}async getSettings({id}){return await this.call("getSettings",{id})}}exports.StorageBackend=StorageBackend},"./node_modules/vanellus/dist/backend/store.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.InMemoryStorage=exports.StorageStore=exports.PrefixStore=void 0;exports.PrefixStore=class PrefixStore{constructor(store,prefix){this.store=store,this.prefix=prefix}set(key,data){return this.store.set(`${this.prefix}::${key}`,data)}get(key,defaultValue){return this.store.get(`${this.prefix}::${key}`,defaultValue)}delete(key){return this.store.delete(`${this.prefix}::${key}`)}deleteAll(prefix){this.store.deleteAll(`${this.prefix}::${prefix}`)}};exports.StorageStore=class StorageStore{constructor(storage){this.storage=storage}set(key,data){if(null==data)return this.delete(key);this.storage.setItem(key,JSON.stringify(data))}get(key,defaultValue){const data=this.storage.getItem(key);return null!==data?JSON.parse(data):void 0!==defaultValue?defaultValue:null}delete(key){this.storage.removeItem(key)}deleteAll(prefix){for(const key in this.storage)key.startsWith(prefix)&&this.storage.removeItem(key)}};exports.InMemoryStorage=class InMemoryStorage{constructor(){this._data={}}getItem(key){return this._data[key]||null}setItem(key,value){this._data[key]=value}removeItem(key){delete this._data[key]}}},"./node_modules/vanellus/dist/crypto/derive.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.deriveSecrets=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js"),token_1=__webpack_require__("./node_modules/vanellus/dist/crypto/token.js");exports.deriveSecrets=async function deriveSecrets(key,len,n){try{const baseKey=await crypto.subtle.importKey("raw",key,"HKDF",!1,["deriveKey","deriveBits"]),secrets=[];for(let i=0;i<n;i++){const secret=await crypto.subtle.deriveBits({name:"HKDF",hash:"SHA-256",salt:token_1.salt,info:(0,conversion_1.str2ab)(`${i}`)},baseKey,8*len);secrets.push((0,conversion_1.buf2b64)(secret))}return secrets}catch(e){return console.error(e),null}}},"./node_modules/vanellus/dist/crypto/encrypt.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ecdhDecrypt=exports.ephemeralECDHEncrypt=exports.ecdhEncrypt=exports.aesDecrypt=exports.aesEncrypt=void 0;const generate_key_1=__webpack_require__("./node_modules/vanellus/dist/crypto/generate-key.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js"),token_1=__webpack_require__("./node_modules/vanellus/dist/crypto/token.js");exports.aesEncrypt=async function aesEncrypt(rawData,secret){const data=(0,conversion_1.str2ab)(rawData);try{const secretKey=await crypto.subtle.importKey("raw",secret,"PBKDF2",!1,["deriveKey"]),symmetricKey=await crypto.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:token_1.salt,iterations:1e5},secretKey,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]),iv=crypto.getRandomValues(new Uint8Array(12)),encryptedData=await crypto.subtle.encrypt({name:"AES-GCM",tagLength:128,iv},symmetricKey,data);return{iv:(0,conversion_1.buf2b64)(iv),data:(0,conversion_1.buf2b64)(encryptedData)}}catch(e){return console.error(e),null}},exports.aesDecrypt=async function aesDecrypt(data,secret){try{const secretKey=await crypto.subtle.importKey("raw",secret,"PBKDF2",!1,["deriveKey"]),symmetricKey=await crypto.subtle.deriveKey({name:"PBKDF2",hash:"SHA-256",salt:token_1.salt,iterations:1e5},secretKey,{name:"AES-GCM",length:256},!1,["encrypt","decrypt"]),decryptedData=await crypto.subtle.decrypt({name:"AES-GCM",tagLength:128,iv:(0,conversion_1.b642buf)(data.iv)},symmetricKey,(0,conversion_1.b642buf)(data.data));return(0,conversion_1.ab2str)(decryptedData)}catch(e){return console.error(e),null}},exports.ecdhEncrypt=async function ecdhEncrypt(rawData,keyPair,publicKeyData){const data=(0,conversion_1.str2ab)(rawData);try{const publicKey=await crypto.subtle.importKey("spki",(0,conversion_1.b642buf)(publicKeyData),{name:"ECDH",namedCurve:"P-256"},!0,[]),privateKey=await crypto.subtle.importKey("jwk",keyPair.privateKey,{name:"ECDH",namedCurve:"P-256"},!1,["deriveKey"]),symmetricKey=await crypto.subtle.deriveKey({name:"ECDH",public:publicKey},privateKey,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),iv=crypto.getRandomValues(new Uint8Array(12)),encryptedData=await crypto.subtle.encrypt({name:"AES-GCM",tagLength:128,iv},symmetricKey,data);return{iv:(0,conversion_1.buf2b64)(iv),data:(0,conversion_1.buf2b64)(encryptedData),publicKey:keyPair.publicKey}}catch(e){return null}},exports.ephemeralECDHEncrypt=async function ephemeralECDHEncrypt(rawData,publicKeyData){const data=(0,conversion_1.str2ab)(rawData);try{const ephemeralKeyPair=await(0,generate_key_1.generateECDHKeyPair)(),publicKey=await crypto.subtle.importKey("spki",(0,conversion_1.b642buf)(publicKeyData),{name:"ECDH",namedCurve:"P-256"},!0,[]),privateKey=await crypto.subtle.importKey("jwk",ephemeralKeyPair.privateKey,{name:"ECDH",namedCurve:"P-256"},!1,["deriveKey"]),symmetricKey=await crypto.subtle.deriveKey({name:"ECDH",public:publicKey},privateKey,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),iv=crypto.getRandomValues(new Uint8Array(12)),encryptedData=await crypto.subtle.encrypt({name:"AES-GCM",tagLength:128,iv},symmetricKey,data);return[{iv:(0,conversion_1.buf2b64)(iv),data:(0,conversion_1.buf2b64)(encryptedData),publicKey:ephemeralKeyPair.publicKey},ephemeralKeyPair.privateKey]}catch(e){return null}},exports.ecdhDecrypt=async function ecdhDecrypt(data,privateKeyData){try{const privateKey=await crypto.subtle.importKey("jwk",privateKeyData,{name:"ECDH",namedCurve:"P-256"},!1,["deriveKey"]),publicKey=await crypto.subtle.importKey("spki",(0,conversion_1.b642buf)(data.publicKey),{name:"ECDH",namedCurve:"P-256"},!0,[]),symmetricKey=await crypto.subtle.deriveKey({name:"ECDH",public:publicKey},privateKey,{name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),decryptedData=await crypto.subtle.decrypt({name:"AES-GCM",tagLength:128,iv:(0,conversion_1.b642buf)(data.iv)},symmetricKey,(0,conversion_1.b642buf)(data.data));return(0,conversion_1.ab2str)(decryptedData)}catch(e){return null}}},"./node_modules/vanellus/dist/crypto/generate-key.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.generateECDHKeyPair=exports.generateECDSAKeyPair=exports.generateSymmetricKey=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.generateSymmetricKey=async function generateSymmetricKey(){try{const key=await crypto.subtle.generateKey({name:"AES-GCM",length:256},!0,["encrypt","decrypt"]),keyBytes=await crypto.subtle.exportKey("raw",key);return(0,conversion_1.buf2b64)(keyBytes)}catch(e){console.error(e)}return null},exports.generateECDSAKeyPair=async function generateECDSAKeyPair(){try{const key=await crypto.subtle.generateKey({name:"ECDSA",namedCurve:"P-256"},!0,["sign","verify"]),pubKey=await crypto.subtle.exportKey("spki",key.publicKey),privKey=await crypto.subtle.exportKey("jwk",key.privateKey);return{publicKey:(0,conversion_1.buf2b64)(pubKey),privateKey:privKey}}catch(e){console.error(e)}return null},exports.generateECDHKeyPair=async function generateECDHKeyPair(){try{const key=await crypto.subtle.generateKey({name:"ECDH",namedCurve:"P-256"},!0,["deriveKey"]),pubKey=await crypto.subtle.exportKey("spki",key.publicKey),privKey=await crypto.subtle.exportKey("jwk",key.privateKey);return{publicKey:(0,conversion_1.buf2b64)(pubKey),privateKey:privKey}}catch(e){console.error(e)}return null}},"./node_modules/vanellus/dist/crypto/hash.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.hashString=exports.hash=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.hash=async function hash(rawData){const data=(0,conversion_1.b642buf)(rawData);return(0,conversion_1.buf2b64)(await crypto.subtle.digest("SHA-256",data))},exports.hashString=async function hashString(rawData){const data=(0,conversion_1.str2ab)(rawData);return(0,conversion_1.buf2b64)(await crypto.subtle.digest("SHA-256",data))}},"./node_modules/vanellus/dist/crypto/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/generate-key.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/encrypt.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/verify.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/sign.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/hash.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/random.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/token.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/crypto/derive.js"),exports)},"./node_modules/vanellus/dist/crypto/random.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.randomBytes=void 0;const buffer_1=__webpack_require__("./node_modules/buffer/index.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.randomBytes=function randomBytes(n){const array=new Uint8Array(n);return crypto.getRandomValues(array),(0,conversion_1.buf2b64)(buffer_1.Buffer.from(array))}},"./node_modules/vanellus/dist/crypto/sign.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.sign=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.sign=async function sign(keyData,rawData,publicKeyData){const data=(0,conversion_1.str2ab)(rawData);try{const key=await crypto.subtle.importKey("jwk",keyData,{name:"ECDSA",namedCurve:"P-256"},!1,["sign"]),result=await crypto.subtle.sign({name:"ECDSA",hash:"SHA-256"},key,data),d={signature:(0,conversion_1.buf2b64)(result),data:rawData};return void 0!==publicKeyData&&(d.publicKey=publicKeyData),d}catch(e){console.error(e)}return null}},"./node_modules/vanellus/dist/crypto/token.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.deriveToken=exports.salt=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.salt=(0,conversion_1.b642buf)("tlsfpYaKiH/WZUnWkoeE2g=="),exports.deriveToken=async function deriveToken(secret,n){const secretBytes=(0,conversion_1.b642buf)(secret),secretKey=await crypto.subtle.importKey("raw",secretBytes,"HKDF",!1,["deriveBits"]),token=await crypto.subtle.deriveBits({name:"HKDF",hash:"SHA-256",salt:exports.salt,info:(0,conversion_1.str2ab)(`${n}`)},secretKey,256);return(0,conversion_1.buf2b64)(token)}},"./node_modules/vanellus/dist/crypto/verify.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.verify=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.verify=async function verify(keys,signedData){const signature=(0,conversion_1.b642buf)(signedData.signature),data=(0,conversion_1.str2ab)(signedData.data);for(const keyData of keys){const ab=(0,conversion_1.b642buf)(keyData);try{const key=await crypto.subtle.importKey("spki",ab,{name:"ECDSA",namedCurve:"P-256"},!1,["verify"]);if(!0===await crypto.subtle.verify({name:"ECDSA",hash:"SHA-256"},key,signature,data))return!0}catch(e){console.error(e);continue}}return!1}},"./node_modules/vanellus/dist/helpers/conversion.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.b642buf=exports.buf2b64=exports.append2buf=exports.ab2str=exports.str2ab=exports.hex2buf=exports.base322buf=exports.buf2base32=exports.buf2hex=void 0;const buffer_1=__webpack_require__("./node_modules/buffer/index.js");exports.buf2hex=function buf2hex(buffer){return[...new Uint8Array(buffer)].map((x=>x.toString(16).padStart(2,"0"))).join("")};const b32="abcdefghijkmnpqrstuvwxyz23456789";function base322buf(base32){const bytes=[];let pos=0,b=0;base32=base32.toLowerCase().replace(/[^abcdefghijkmnpqrstuvwxyz23456789]/g,"");for(const c of base32){const i=b32.indexOf(c);b|=i<<pos%8&255,pos%8>=3&&(bytes.push(b),b=i>>8-pos%8),pos+=5}return pos-5>3&&0!=b&&bytes.push(b),new Uint8Array(bytes)}exports.buf2base32=function buf2base32(buffer){const array=new Uint8Array(buffer);let base32="",pos=0;for(;;){const b=Math.floor(pos/8);if(b>=array.length)break;let v=array[b]>>pos%8&31;pos%8>3&&b<array.length-1&&(v|=(array[b+1]&255>>11-pos%8)<<8-pos%8),base32+=b32[v],pos+=5}const bb=base322buf(base32);if(bb.length!=array.length)throw"conversion error (length)";for(let i=0;i<bb.length;i++)if(bb[i]!=array[i])throw"conversion error (value)";return base32},exports.base322buf=base322buf,exports.hex2buf=function hex2buf(hex){const buffer=new ArrayBuffer(hex.length/2),array=new Uint8Array(buffer);let k=0;for(let i=0;i<hex.length;i+=2)array[k]=parseInt(hex[i]+hex[i+1],16),k++;return buffer},exports.str2ab=function str2ab(str){return(new TextEncoder).encode(str).buffer},exports.ab2str=function ab2str(buf){return(new TextDecoder).decode(new Uint8Array(buf))},exports.append2buf=function append2buf(a,b){const c=new Uint8Array(a.length+b.length);let i=0;for(const n of a.values())c[i++]=n;for(const n of b.values())c[i++]=n;return c},exports.buf2b64=function buf2b64(buffer){let binary="";const bytes=new Uint8Array(buffer),len=bytes.byteLength;for(let i=0;i<len;i++)binary+=String.fromCharCode(bytes[i]);return btoa(binary)},exports.b642buf=function b642buf(base64){const bs=buffer_1.Buffer.from(base64,"base64"),len=(bs.toString(),bs.byteLength),bytes=new Uint8Array(len);for(let i=0;i<len;i++)bytes[i]=bs[i];return bytes.buffer}},"./node_modules/vanellus/dist/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.randomBytes=exports.deriveSecrets=exports.b642buf=void 0;var conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");Object.defineProperty(exports,"b642buf",{enumerable:!0,get:function(){return conversion_1.b642buf}});var crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");Object.defineProperty(exports,"deriveSecrets",{enumerable:!0,get:function(){return crypto_1.deriveSecrets}}),Object.defineProperty(exports,"randomBytes",{enumerable:!0,get:function(){return crypto_1.randomBytes}}),__exportStar(__webpack_require__("./node_modules/vanellus/dist/mediator/index.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/provider/index.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/user/index.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/backend/index.js"),exports)},"./node_modules/vanellus/dist/interfaces/appointments.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/backend.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Status=void 0,function(Status){Status.Succeeded="succeeded",Status.Failed="failed",Status.Waiting="waiting"}(exports.Status||(exports.Status={}))},"./node_modules/vanellus/dist/interfaces/crypto.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/index.js":function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k),Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/appointments.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/settings.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/provider.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/mediator.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/backend.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/crypto.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/user.js"),exports),__exportStar(__webpack_require__("./node_modules/vanellus/dist/interfaces/rpc.js"),exports)},"./node_modules/vanellus/dist/interfaces/mediator.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/provider.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/rpc.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/settings.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/interfaces/user.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},"./node_modules/vanellus/dist/mediator/confirm-provider.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.confirmProvider=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");exports.confirmProvider=async function confirmProvider(providerData){const data=providerData.data,keyHashesData={signing:data.publicKeys.signing,encryption:data.publicKeys.encryption,queueData:{zipCode:data.zipCode,accessible:data.accessible}},keysJSONData=JSON.stringify(keyHashesData),publicProviderData={name:data.name,street:data.street,city:data.city,zipCode:data.zipCode,website:data.website,description:data.description},publicProviderJSONData=JSON.stringify(publicProviderData),providerJSONData=JSON.stringify(data),signedKeyData=await(0,crypto_1.sign)(this.keyPairs.signing.privateKey,keysJSONData,this.keyPairs.signing.publicKey),signedProviderData=await(0,crypto_1.sign)(this.keyPairs.signing.privateKey,providerJSONData,this.keyPairs.signing.publicKey),signedPublicProviderData=await(0,crypto_1.sign)(this.keyPairs.signing.privateKey,publicProviderJSONData,this.keyPairs.signing.publicKey),fullData={signedData:signedProviderData,signedPublicData:signedPublicProviderData},[encryptedProviderData]=await(0,crypto_1.ephemeralECDHEncrypt)(JSON.stringify(fullData),providerData.encryptedData.publicKey),encryptedProviderDataJSON=JSON.stringify(encryptedProviderData),signedEncryptedProviderData=await(0,crypto_1.sign)(this.keyPairs.signing.privateKey,encryptedProviderDataJSON,this.keyPairs.signing.publicKey);return await this.backend.appointments.confirmProvider({encryptedProviderData:signedEncryptedProviderData,publicProviderData:signedPublicProviderData,signedKeyData},this.keyPairs.signing),{status:interfaces_1.Status.Succeeded}}},"./node_modules/vanellus/dist/mediator/get-stats.js":(__unused_webpack_module,exports)=>{async function getStats(state,keyStore,settings,params){const backend=settings.get("backend");try{return{status:"loaded",data:await backend.appointments.getStats(params)}}catch(e){return console.error(e),{status:"failed",error:e}}}Object.defineProperty(exports,"__esModule",{value:!0}),exports.getStats=void 0,exports.getStats=getStats,getStats.actionName="getStats"},"./node_modules/vanellus/dist/mediator/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Mediator=void 0;const confirm_provider_1=__webpack_require__("./node_modules/vanellus/dist/mediator/confirm-provider.js"),providers_1=__webpack_require__("./node_modules/vanellus/dist/mediator/providers.js"),get_stats_1=__webpack_require__("./node_modules/vanellus/dist/mediator/get-stats.js"),actor_1=__webpack_require__("./node_modules/vanellus/dist/actor.js");class Mediator extends actor_1.Actor{constructor(id,backend){super("mediator",id,backend),this.confirmProvider=confirm_provider_1.confirmProvider,this.pendingProviders=providers_1.pendingProviders,this.verifiedProviders=providers_1.verifiedProviders,this.getStats=get_stats_1.getStats}get keyPairs(){return this.get("keyPairs")}set keyPairs(keyPairs){this.set("keyPairs",keyPairs)}}exports.Mediator=Mediator},"./node_modules/vanellus/dist/mediator/providers.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.verifiedProviders=exports.pendingProviders=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");exports.pendingProviders=async function pendingProviders(){const providerData=await this.backend.appointments.getPendingProviderData({},this.keyPairs.signing);if("code"in providerData)return{status:interfaces_1.Status.Failed,error:providerData};for(const pd of providerData){const decryptedData=await(0,crypto_1.ecdhDecrypt)(pd.encryptedData,this.keyPairs.provider.privateKey);if(null===decryptedData)return{status:interfaces_1.Status.Failed,error:pd};pd.data=JSON.parse(decryptedData)}return{status:interfaces_1.Status.Succeeded,providers:providerData}},exports.verifiedProviders=async function verifiedProviders(){const providerData=await this.backend.appointments.getVerifiedProviderData({},this.keyPairs.signing);if("code"in providerData)return{status:interfaces_1.Status.Failed,error:providerData};for(const pd of providerData){const decryptedData=await(0,crypto_1.ecdhDecrypt)(pd.encryptedData,this.keyPairs.provider.privateKey);if(null===decryptedData)return{status:interfaces_1.Status.Failed,error:pd};pd.data=JSON.parse(decryptedData)}return{status:interfaces_1.Status.Succeeded,providers:providerData}}},"./node_modules/vanellus/dist/provider/backup-data.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.backupData=void 0;const interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js"),crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.backupData=async function backupData(lockName){void 0===lockName&&(lockName="backupData");try{await this.lock(lockName)}catch(e){throw null}try{const localData={version:"0.2",keyPairs:this.keyPairs,createdAt:(new Date).toISOString()};if(this.loggedOut)return{status:interfaces_1.Status.Failed,error:{error:"logged out"}};const cloudData={version:"0.2",createdAt:(new Date).toISOString(),data:this.data,verifiedData:this.verifiedData},referenceData={local:{...localData},cloud:{...cloudData}};if(null!==this.referenceData&&JSON.stringify(this.referenceData)===JSON.stringify(referenceData))return{status:interfaces_1.Status.Succeeded,referenceData,localData,cloudData};await(0,crypto_1.aesEncrypt)(JSON.stringify(localData),(0,conversion_1.base322buf)(this.secret));const idAndKey=await(0,crypto_1.deriveSecrets)((0,conversion_1.b642buf)(this.keyPairs.sync),32,2),[id,key]=idAndKey,encryptedCloudData=await(0,crypto_1.aesEncrypt)(JSON.stringify(cloudData),(0,conversion_1.b642buf)(key));return await this.backend.storage.storeSettings({id,data:encryptedCloudData}),this.referenceData=referenceData,{status:interfaces_1.Status.Succeeded,referenceData,localData,cloudData}}catch(e){return{status:interfaces_1.Status.Failed,error:{error:e instanceof Error?e.toString():"unknown error"}}}finally{"logout"===lockName?(this.loggedOut=!0,this.clearLocks()):this.unlock(lockName)}}},"./node_modules/vanellus/dist/provider/cancel-appointment.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.cancelAppointment=void 0,exports.cancelAppointment=async function cancelAppointment(appointment){const openAppointments=this.openAppointments,canceledAppointment=openAppointments.find((ap=>ap.id===appointment.id));if(void 0===canceledAppointment)return{status:"failed"};const otherAppointments=openAppointments.filter((ap=>ap.id!==appointment.id));return canceledAppointment.slotData=[],canceledAppointment.modified=!0,otherAppointments.push(canceledAppointment),this.openAppointments=otherAppointments,{status:"suceeded",data:otherAppointments}}},"./node_modules/vanellus/dist/provider/check-verified-provider-data.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkVerifiedProviderData=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.checkVerifiedProviderData=async function checkVerifiedProviderData(data){const verifiedData=await this.backend.appointments.checkProviderData({},this.keyPairs.signing);try{const decryptedJSONData=await(0,crypto_1.ecdhDecrypt)(verifiedData.result.encryptedProviderData.data,this.keyPairs.encryption.privateKey);if(null===decryptedJSONData)return this.verifiedData=null,{status:"failed"};const decryptedData=JSON.parse(decryptedJSONData);return decryptedData.signedData.json=JSON.parse(decryptedData.signedData.data),this.verifiedData=decryptedData,{status:"loaded",data:decryptedData}}catch(e){return this.verifiedData=null,{status:"failed"}}}},"./node_modules/vanellus/dist/provider/create-appointment.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createAppointment=exports.createSlot=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.createSlot=function createSlot(){return{open:!0,id:(0,crypto_1.randomBytes)(32),status:(0,crypto_1.randomBytes)(32),cancel:(0,crypto_1.randomBytes)(32)}},exports.createAppointment=async function createAppointment(appointment){const openAppointments=this.openAppointments;return openAppointments.push(appointment),this.openAppointments=openAppointments,{status:"loaded",data:openAppointments}}},"./node_modules/vanellus/dist/provider/generate-key-pairs.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.generateKeyPairs=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.generateKeyPairs=async function generateKeyPairs(){const syncKey=await(0,crypto_1.generateSymmetricKey)(),dataKeyPair=await(0,crypto_1.generateECDHKeyPair)(),keyPairs={sync:syncKey,signing:await(0,crypto_1.generateECDSAKeyPair)(),data:dataKeyPair,encryption:await(0,crypto_1.generateECDHKeyPair)()};return this.keyPairs=keyPairs,keyPairs}},"./node_modules/vanellus/dist/provider/get-appointments.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAppointments=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");exports.getAppointments=async function getAppointments({from,to}){const decryptBookings=async bookings=>{for(const booking of bookings){const decryptedData=await(0,crypto_1.ecdhDecrypt)(booking.encryptedData,this.keyPairs.encryption.privateKey),dd=JSON.parse(decryptedData);booking.data=dd}return bookings},openAppointments=this.openAppointments||[],response=await this.backend.appointments.getAppointments({from,to},this.keyPairs.signing);if(!(response instanceof Array))return{status:interfaces_1.Status.Failed,error:response};const newAppointments=[];for(const appointment of response){if(!await(0,crypto_1.verify)([this.keyPairs.signing.publicKey],appointment))continue;const appData=JSON.parse(appointment.data);if(newAppointments.find((app=>app.id===appData.id)))continue;const existingAppointment=openAppointments.find((app=>app.id===appData.id));if(existingAppointment){if(existingAppointment.modified)continue;existingAppointment.slotData=existingAppointment.slotData.filter((sl=>appData.slotData.some((slot=>slot.id===sl.id)))),existingAppointment.slotData=[...existingAppointment.slotData,...appData.slotData.filter((sl=>!existingAppointment.slotData.some((slot=>slot.id===sl.id))))],existingAppointment.updatedAt=appData.updatedAt,existingAppointment.bookings=await decryptBookings(appointment.bookings||[]);continue}const newAppointment={updatedAt:appData.updatedAt,timestamp:appData.timestamp,duration:appData.duration,slotData:appData.slotData,publicKey:appData.publicKey,properties:appData.properties,bookings:await decryptBookings(appointment.bookings||[]),modified:!1,id:appData.id};newAppointments.push(newAppointment)}const allAppointments=[...openAppointments,...newAppointments];return this.openAppointments=allAppointments,{status:interfaces_1.Status.Succeeded,appointments:allAppointments}}},"./node_modules/vanellus/dist/provider/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Provider=void 0;const backup_data_1=__webpack_require__("./node_modules/vanellus/dist/provider/backup-data.js"),check_verified_provider_data_1=__webpack_require__("./node_modules/vanellus/dist/provider/check-verified-provider-data.js"),generate_key_pairs_1=__webpack_require__("./node_modules/vanellus/dist/provider/generate-key-pairs.js"),provider_data_1=__webpack_require__("./node_modules/vanellus/dist/provider/provider-data.js"),submit_provider_data_1=__webpack_require__("./node_modules/vanellus/dist/provider/submit-provider-data.js"),create_appointment_1=__webpack_require__("./node_modules/vanellus/dist/provider/create-appointment.js"),verified_provider_data_1=__webpack_require__("./node_modules/vanellus/dist/provider/verified-provider-data.js"),provider_secret_1=__webpack_require__("./node_modules/vanellus/dist/provider/provider-secret.js"),restore_from_backup_1=__webpack_require__("./node_modules/vanellus/dist/provider/restore-from-backup.js"),update_appointment_1=__webpack_require__("./node_modules/vanellus/dist/provider/update-appointment.js"),cancel_appointment_1=__webpack_require__("./node_modules/vanellus/dist/provider/cancel-appointment.js"),publish_appointments_1=__webpack_require__("./node_modules/vanellus/dist/provider/publish-appointments.js"),get_appointments_1=__webpack_require__("./node_modules/vanellus/dist/provider/get-appointments.js"),actor_1=__webpack_require__("./node_modules/vanellus/dist/actor.js");class Provider extends actor_1.Actor{constructor(id,backend){super("provider",id,backend),this.backupData=backup_data_1.backupData,this.checkVerifiedProviderData=check_verified_provider_data_1.checkVerifiedProviderData,this.providerData=provider_data_1.providerData,this.submitProviderData=submit_provider_data_1.submitProviderData,this.createAppointment=create_appointment_1.createAppointment,this.verifiedProviderData=verified_provider_data_1.verifiedProviderData,this.providerSecret=provider_secret_1.providerSecret,this.restoreFromBackup=restore_from_backup_1.restoreFromBackup,this.updateAppointment=update_appointment_1.updateAppointment,this.cancelAppointment=cancel_appointment_1.cancelAppointment,this.publishAppointments=publish_appointments_1.publishAppointments,this.getAppointments=get_appointments_1.getAppointments,this.generateKeyPairs=generate_key_pairs_1.generateKeyPairs}get openAppointments(){return this.get("openAppointments")}set openAppointments(appointments){this.set("openAppointments",appointments)}get loggedOut(){return this.get("loggedOut")}set loggedOut(loggedOut){this.set("loggedOut",loggedOut)}get keyPairs(){return this.get("keyPairs")}set keyPairs(keyPairs){this.set("keyPairs",keyPairs)}get referenceData(){return this.get("referenceData")}set referenceData(referenceData){this.set("referenceData",referenceData)}get data(){return this.get("data")}set data(data){this.set("data",data)}get verifiedData(){return this.get("verifiedData")}set verifiedData(verifiedData){this.set("verifiedData",verifiedData)}get secret(){return this.get("secret")}set secret(secret){this.set("secret",secret)}}exports.Provider=Provider},"./node_modules/vanellus/dist/provider/provider-data.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.providerData=void 0,exports.providerData=async function providerData(data){let providerData=this.backend.local.get("provider::data");return null===providerData&&(providerData={data:{}}),void 0!==data&&(providerData.data=data),this.backend.local.set("provider::data",providerData),{status:"loaded",data:providerData}}},"./node_modules/vanellus/dist/provider/provider-secret.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.init=exports.providerSecret=void 0;const conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js"),crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.providerSecret=async function providerSecret(data,lockName){return void 0!==data&&this.backend.local.set("secret",data),null===(data=this.backend.local.get("secret"))?{status:"failed"}:{status:"loaded",data}},exports.init=function init(){let data=this.backend.local.get("secret");return null===data&&(data=(0,conversion_1.buf2base32)((0,conversion_1.b642buf)((0,crypto_1.randomBytes)(15))),this.backend.local.set("secret",data)),{status:"loaded",data}}},"./node_modules/vanellus/dist/provider/publish-appointments.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.publishAppointments=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.publishAppointments=async function publishAppointments(){const openAppointments=this.backend.local.get("provider::appointments::open",[]),signedAppointments=[],relevantAppointments=openAppointments.filter((oa=>new Date(oa.timestamp)>new Date((new Date).getTime()-144e5)&&oa.modified));for(const appointment of relevantAppointments)try{const properties={},convertedAppointment={id:appointment.id,duration:appointment.duration,timestamp:appointment.timestamp,publicKey:this.keyPairs.encryption.publicKey,properties,slotData:appointment.slotData.map((sl=>({id:sl.id})))};for(const[k,v]of Object.entries(this.backend.settings.appointment.properties))for(const[kk]of Object.entries(v.values))!0===appointment[kk]&&(convertedAppointment.properties[k]=kk);const signedAppointment=await(0,crypto_1.sign)(this.keyPairs.signing.privateKey,JSON.stringify(convertedAppointment),this.keyPairs.signing.publicKey);if(null===signedAppointment)throw"null";signedAppointments.push(signedAppointment)}catch(e){console.error(e);continue}if(0===signedAppointments.length)return{status:"aborted",data:null};const result=await this.backend.appointments.publishAppointments({offers:signedAppointments},this.keyPairs.signing);for(const appointment of relevantAppointments)delete appointment.modified;return this.backend.local.set("appointments::open",openAppointments),{status:"succeeded",data:result}}},"./node_modules/vanellus/dist/provider/restore-from-backup.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.restoreFromBackup=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");exports.restoreFromBackup=async function restoreFromBackup(secret,data,localOnly){const decryptedData=await(0,crypto_1.aesDecrypt)(data,(0,conversion_1.base322buf)(secret)),dd=JSON.parse(decryptedData);if(null===dd)return{status:"failed",error:{message:"decryption failed"}};if(void 0!==dd.keyPairs.sync&&!0!==localOnly){const derivedSecrets=await(0,crypto_1.deriveSecrets)((0,conversion_1.b642buf)(dd.keyPairs.sync),32,2),[id,key]=derivedSecrets;try{const response=await this.backend.storage.getSettings({id}),decryptedData=await(0,crypto_1.aesDecrypt)(response.result,(0,conversion_1.b642buf)(key));JSON.parse(decryptedData)}catch(e){console.error(e)}}return this.backend.local.set("provider::secret",secret),{status:"succeeded",data:dd}}},"./node_modules/vanellus/dist/provider/submit-provider-data.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.reset=exports.submitProviderData=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js");exports.submitProviderData=async function submitProviderData(data,keys){const dataToEncrypt=Object.assign({},data);let keyPair=this.backend.local.get("data::encryptionKeyPair");null===keyPair&&(keyPair=await(0,crypto_1.generateECDHKeyPair)(),this.backend.local.set("data::encryptionKeyPair",keyPair)),dataToEncrypt.publicKeys={signing:this.keyPairs.signing.publicKey,encryption:this.keyPairs.encryption.publicKey};const providerDataKey=keys.providerData,jsonData=JSON.stringify(dataToEncrypt),encryptedData=await(0,crypto_1.ecdhEncrypt)(jsonData,keyPair,providerDataKey);try{const result=await this.backend.appointments.storeProviderData({encryptedData,code:data.data.code},this.keyPairs.signing);return data.submittedAt=(new Date).toISOString(),data.version="0.4",this.backend.local.set("data",data),{status:"succeeded",data:result}}catch(e){return console.error(e),{status:"failed",error:e}}},exports.reset=function reset(){return{status:"initialized"}}},"./node_modules/vanellus/dist/provider/update-appointment.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.updateAppointment=void 0;const create_appointment_1=__webpack_require__("./node_modules/vanellus/dist/provider/create-appointment.js");exports.updateAppointment=async function updateAppointment(data,appointment){try{await this.lock("updateAppointment")}catch(e){throw null}try{const openAppointments=this.backend.local.get("appointments::open",[]),otherAppointments=openAppointments.filter((ap=>ap.id!==appointment.id));if(!openAppointments.find((ap=>ap.id===appointment.id)))return{status:"failed"};const openSlots=appointment.slotData.filter((sl=>!sl.canceled&&sl.open)),closedSlots=appointment.slotData.filter((sl=>!sl.canceled&&!sl.open)),cs=Math.min(closedSlots.length,data.slotData.length),os=Math.min(openSlots.length,Math.max(0,data.slotData.length-cs)),ns=Math.max(0,data.slotData.length-cs-os);appointment.slotData=[...closedSlots.slice(0,cs),...openSlots.slice(0,os),...[...Array(ns).keys()].map((()=>(0,create_appointment_1.createSlot)()))];for(const[k,v]of Object.entries(data))appointment[k]=v;return appointment.modified=!0,otherAppointments.push(appointment),this.backend.local.set("appointments::open",otherAppointments),{status:"loaded",data:otherAppointments}}finally{this.unlock("updateAppointment")}}},"./node_modules/vanellus/dist/provider/verified-provider-data.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.verifiedProviderData=void 0,exports.verifiedProviderData=async function verifiedProviderData(){try{await this.lock("verifiedProviderData")}catch(e){throw null}try{return{status:"loaded",data:this.backend.local.get("data::verified")}}finally{this.unlock("verifiedProviderData")}}},"./node_modules/vanellus/dist/user/backup-data.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.backupData=exports.backupKeys=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js");async function backupData(state,keyStore,settings,secret,lockName){const backend=settings.get("backend");void 0===lockName&&(lockName="backupData");try{await backend.local.lock(lockName)}catch(e){throw null}try{const data={};for(const key of exports.backupKeys)data[key]=backend.local.get(`user::${key}`);const fullData={...data,version:"0.1",createdAt:(new Date).toISOString()},idAndKey=await(0,crypto_1.deriveSecrets)((0,conversion_1.base322buf)(secret),32,2),[id,key]=idAndKey,encryptedData=await(0,crypto_1.aesEncrypt)(JSON.stringify(fullData),(0,conversion_1.b642buf)(key));return void 0!==state&&null!=state.referenceData&&JSON.stringify(state.referenceData)===JSON.stringify(data)?state:(await backend.storage.storeSettings({id,data:encryptedData}),{status:"succeeded",data:encryptedData,referenceData:data})}catch(e){return console.error(e),{status:"failed",error:e}}finally{backend.local.unlock(lockName)}}exports.backupKeys=["tokenData","queueData","invitation","invitation::verified","invitation::accepted","invitation::slots","secret"],exports.backupData=backupData,backupData.actionName="backupData"},"./node_modules/vanellus/dist/user/book-appointment.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.bookAppointment=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");exports.bookAppointment=async function bookAppointment(signedAppointment,provider){const providerData={signedToken:this.tokenData.signedToken,userToken:this.tokenData.userToken},appointment=signedAppointment.json,encryptedDataAndPublicKey=await(0,crypto_1.ephemeralECDHEncrypt)(JSON.stringify(providerData),appointment.publicKey),[encryptedData]=encryptedDataAndPublicKey;let response=await this.backend.appointments.bookAppointment({id:appointment.id,providerID:provider.id,encryptedData,signedTokenData:this.tokenData.signedToken},this.tokenData.signingKeyPair);if("code"in response)return{status:interfaces_1.Status.Failed,error:response};const acceptedInvitation={appointment:signedAppointment,provider,booking:response};return this.acceptedInvitation=acceptedInvitation,{status:interfaces_1.Status.Succeeded,acceptedInvitation}}},"./node_modules/vanellus/dist/user/cancel-appointment.js":(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.cancelAppointment=void 0,exports.cancelAppointment=async function cancelAppointment(state,keyStore,settings,acceptedInvitation,tokenData){const id=acceptedInvitation.offer.id;try{await this.backend.appointments.cancelAppointment({id,signedTokenData:tokenData.signedToken,providerID:acceptedInvitation.invitation.provider.id},tokenData.signingKeyPair)}catch(e){return console.error(e),{status:"failed",error:e}}return{status:"succeeded"}}},"./node_modules/vanellus/dist/user/get-appointments.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAppointments=void 0;const interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");async function verifyOffer(offer,item){return JSON.parse(offer.data)}async function verifyProviderData(item){return JSON.parse(item.provider.data)}exports.getAppointments=async function getAppointments({from,to}){try{const response=await this.backend.appointments.getAppointmentsByZipCode({zipCode:this.queueData.zipCode,from,to});if(!(response instanceof Array))return{status:interfaces_1.Status.Failed,error:response};const verifiedAppointments=[];for(const item of response)try{item.provider.json=await verifyProviderData(item);const verifiedOffers=[];for(const offer of item.offers){const verifiedOffer=await verifyOffer(offer);for(const slot of verifiedOffer.slotData)offer.bookedSlots.some((id=>id===slot.id))?slot.open=!1:slot.open=!0;verifiedOffers.push(verifiedOffer)}item.offers=verifiedOffers,verifiedAppointments.push(item)}catch(e){continue}return verifiedAppointments.sort(((a,b)=>a.provider.json.name>b.provider.json.name?1:-1)),this.verifiedAppointments=verifiedAppointments,{appointments:verifiedAppointments,status:interfaces_1.Status.Succeeded}}catch(e){return{status:interfaces_1.Status.Failed,error:e}}}},"./node_modules/vanellus/dist/user/get-token.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getToken=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),interfaces_1=__webpack_require__("./node_modules/vanellus/dist/interfaces/index.js");async function getToken({code}){const[dataHash,nonce]=await async function hashContactData(data){const hashData={name:data.name,nonce:(0,crypto_1.randomBytes)(32)},hashDataJSON=JSON.stringify(hashData);return[await(0,crypto_1.hashString)(hashDataJSON),hashData.nonce]}(this.contactData),signingKeyPair=await(0,crypto_1.generateECDSAKeyPair)(),encryptionKeyPair=await(0,crypto_1.generateECDHKeyPair)(),userToken={version:"0.3",code:this.userSecret.slice(0,4),createdAt:(new Date).toISOString(),publicKey:signingKeyPair.publicKey,encryptionPublicKey:encryptionKeyPair.publicKey},signedToken=await this.backend.appointments.getToken({hash:dataHash,publicKey:signingKeyPair.publicKey,code});if("code"in signedToken)return{status:interfaces_1.Status.Failed};const tokenData={createdAt:(new Date).toISOString(),signedToken,signingKeyPair,keyPair:encryptionKeyPair,hashNonce:nonce,dataHash,userToken};return this.tokenData=tokenData,{tokenData,status:interfaces_1.Status.Succeeded}}exports.getToken=getToken,getToken.reset=()=>({status:"initialized"}),getToken.actionName="getToken"},"./node_modules/vanellus/dist/user/index.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.User=void 0;const restore_from_backup_1=__webpack_require__("./node_modules/vanellus/dist/user/restore-from-backup.js"),get_token_1=__webpack_require__("./node_modules/vanellus/dist/user/get-token.js"),backup_data_1=__webpack_require__("./node_modules/vanellus/dist/user/backup-data.js"),book_appointment_1=__webpack_require__("./node_modules/vanellus/dist/user/book-appointment.js"),cancel_appointment_1=__webpack_require__("./node_modules/vanellus/dist/user/cancel-appointment.js"),get_appointments_1=__webpack_require__("./node_modules/vanellus/dist/user/get-appointments.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js"),crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),actor_1=__webpack_require__("./node_modules/vanellus/dist/actor.js");class User extends actor_1.Actor{constructor(id,backend){super("user",id,backend),this.restoreFromBackup=restore_from_backup_1.restoreFromBackup,this.cancelAppointment=cancel_appointment_1.cancelAppointment,this.bookAppointment=book_appointment_1.bookAppointment,this.getAppointments=get_appointments_1.getAppointments,this.backupData=backup_data_1.backupData,this.getToken=get_token_1.getToken}generateUserSecret(){return(0,conversion_1.buf2base32)((0,conversion_1.b642buf)((0,crypto_1.randomBytes)(10)))}initialize(){this.userSecret=this.generateUserSecret()}get queueData(){return this.get("queueData")}set queueData(queueData){this.set("queueData",queueData)}get userSecret(){return this.get("userSecret")}set userSecret(userSecret){this.set("userSecret",userSecret)}get tokenData(){return this.get("tokenData")}set tokenData(tokenData){this.set("tokenData",tokenData)}get contactData(){return this.get("contactData")}set contactData(contactData){this.set("contactData",contactData)}get verifiedAppointments(){return this.get("verifiedAppointments")}set verifiedAppointments(verifiedAppointments){this.set("verifiedAppointments",verifiedAppointments)}get acceptedInvitation(){return this.get("acceptedInvitation")}set acceptedInvitation(acceptedInvitation){this.set("acceptedInvitation",acceptedInvitation)}}exports.User=User},"./node_modules/vanellus/dist/user/restore-from-backup.js":(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.restoreFromBackup=void 0;const crypto_1=__webpack_require__("./node_modules/vanellus/dist/crypto/index.js"),conversion_1=__webpack_require__("./node_modules/vanellus/dist/helpers/conversion.js"),backup_data_1=__webpack_require__("./node_modules/vanellus/dist/user/backup-data.js");async function restoreFromBackup(state,keyStore,settings,secret){const backend=settings.get("backend");try{await backend.local.lock("restoreFromBackup")}catch(e){throw null}try{const secrets=await(0,crypto_1.deriveSecrets)((0,conversion_1.base322buf)(secret),32,2),[id,key]=secrets,data=await backend.storage.getSettings({id}),decryptedData=await(0,crypto_1.aesDecrypt)(data,(0,conversion_1.b642buf)(key)),dd=JSON.parse(decryptedData);for(const key of backup_data_1.backupKeys)backend.local.set(`user::${key}`,dd[key]);return backend.local.set("user::secret",secret),{status:"succeeded",data:dd}}catch(e){return console.error(e),{status:"failed",error:e}}finally{backend.local.unlock("restoreFromBackup")}}exports.restoreFromBackup=restoreFromBackup,restoreFromBackup.actionName="restoreFromBackup"}}]);